"""
Django settings for borbolla_webpage project.

Generated by 'django-admin startproject' using Django 5.0.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""
import os
import json

from pathlib import Path


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

secrets_file_path = os.path.join(BASE_DIR, '/etc/config.json')

# Load the secrets from the JSON file
with open(secrets_file_path) as f:
    secrets = json.load(f)

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = secrets.get('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['www.borbollagroup.com','178.128.79.157','borbollagroup.com']



# Application definition

INSTALLED_APPS = [
    'billing.apps.BillingConfig',    # ← should be this, not 'reportes'
    'widget_tweaks',
    'django.contrib.humanize',    # ← add this
    'reportes.apps.ReportesConfig',
    'cotizaciones.apps.CotizacionesConfig',
    'sistema.apps.SistemaConfig',
    'users.apps.UsersConfig',
    'facturador.apps.FacturadorConfig',
    'crispy_forms',
    'crispy_bootstrap4',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'landing_page.apps.LandingPageConfig'
]

MIDDLEWARE = [
    'facturador.middleware.APIKeyMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

from django.contrib.messages import constants as messages
MESSAGE_TAGS = {
    messages.DEBUG: 'debug',
    messages.INFO: 'info',
    messages.SUCCESS: 'success',
    messages.WARNING: 'warning',
    messages.ERROR: 'danger',
}
ROOT_URLCONF = 'borbolla_webpage.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [ BASE_DIR / 'templates' ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'borbolla_webpage.wsgi.application'

DATA_UPLOAD_MAX_MEMORY_SIZE = 10485760

# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'America/Mexico_City'


USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

# This is where collected static files will be stored (for production)
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

# URL to access static files
STATIC_URL = '/static/'

# Directory for user-uploaded files
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'

# Directories where Django will look for static files (should not include STATIC_ROOT)
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static"),
]

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

CRISPY_TEMPLATE_PACK = 'bootstrap4'


LOGIN_REDIRECT_URL = '/'
LOGIN_URL = '/login'
# settings.py

secrets_file_path = os.path.join(BASE_DIR, '/etc/config.json')

# Load the secrets from the JSON file
with open(secrets_file_path) as f:
    secrets = json.load(f)

# Use the secrets in your settings
EMAIL_BACKEND = secrets.get('EMAIL_BACKEND')
EMAIL_HOST = secrets.get('EMAIL_HOST')
EMAIL_PORT = secrets.get('EMAIL_PORT')
EMAIL_USE_TLS = secrets.get('EMAIL_USE_TLS')
EMAIL_HOST_USER = secrets.get('EMAIL_HOST_USER')
EMAIL_HOST_PASSWORD = secrets.get('EMAIL_HOST_PASSWORD')
DEFAULT_FROM_EMAIL = secrets.get('DEFAULT_FROM_EMAIL')

COMPANY_NAME = "Borbolla Group"






